import yara
import os
import git
import subprocess
import glob

'''
repos_urls = ('https://github.com/kevoreilly/CAPEv2.git', 'https://github.com/MARALOGON/m02_boot_0.git') 
repos_paths = ('/CAPEv2/data/yara/CAPE','/m02_boot_0')
repo_directories = '/home/keepcoding/Desktop/yara_automatico' + repos_paths()
subprocess.run(["git", "pull", repos_urls()], cwd = repo_directories() 
'''

#Clonar repositorio en directorio actual
#git.Git('/home/keepcoding/Desktop/yara_automatico').clone('https://github.com/Yara-Rules/rules.git')


#Actualizar todos los repositorios clonados con pull
#cwd = '/home/keepcoding/Desktop/yara_automatico'

repo_url_a = 'https://github.com/kevoreilly/CAPEv2.git'
repo_url_b = 'https://github.com/Yara-Rules/rules.git'
repo_url_c = 'https://github.com/malice-plugins/yara.git'
repo_url_d = 'https://github.com/mikesxrs/Open-Source-YARA-rules.git'

repo_path_a = '/CAPEv2'
repo_path_b = '/rules'
repo_path_c = '/yara'
repo_path_d = '/Open-Source-YARA-rules'

repo_directory_a = '/home/keepcoding/Desktop/yara_automatico' + repo_path_a
repo_directory_b = '/home/keepcoding/Desktop/yara_automatico' + repo_path_b
repo_directory_c = '/home/keepcoding/Desktop/yara_automatico' + repo_path_c
repo_directory_d = '/home/keepcoding/Desktop/yara_automatico' + repo_path_d

subprocess.run(["git", "pull", repo_url_a], cwd = repo_directory_a)
subprocess.run(["git", "pull", repo_url_b], cwd = repo_directory_b)
subprocess.run(["git", "pull", repo_url_c], cwd = repo_directory_c)
subprocess.run(["git", "pull", repo_url_d], cwd = repo_directory_d)





#repo.pull()	  
	
#g = git.cmd.Git('/home/keepcoding/Desktop/yara_automatico'+ 	paths.values)	

	
'''
#for path in paths:
	
	
	g = git.cmd.Git('/home/keepcoding/Desktop/yara_automatico'+ paths())
	os.chdir(paths())
	g.pull()
	
	repo = git.Repo(repositories())
	origin = repo.remote(name=paths())
	origin.pull()
'''

folder = os.path.dirname(os.path.abspath(__file__))
print(folder)
repos_paths = ['/CAPEv2/data/yara/CAPE','/rules', '/yara/rules', '/Open-Source-YARA-rules']
repositories = [os.path.join(folder, repo_path) for repo_path in repos_paths]
print(repositories)


namespace = dict()

for root, dirs, files in os.walk(folder):
	for filename in glob.glob('/home/keepcoding/Desktop/yara_automatico/**/*.yar', recursive=True):
		
		if os.path.isfile(filename):
			namespace[os.path.basename(filename)] = filename

			
			
print(namespace)
rules = yara.compile (filepaths=namespace)
rules.save(os.path.join(folder, 'rules_compiled'))






