import yara
import os
import git
import subprocess
import glob
import shutil


folder = os.path.dirname(os.path.abspath(__file__))
namespace = os.path.join(folder, 'all_rules', 'rules-compiled')


#Clonar repositorio en directorio actual

#git.Git('/home/keepcoding/Desktop/yara_automatico').clone(<'url_repositorio_github'>)


#Actualizar todos los repositorios clonados con pull

repo_url_a = 'https://github.com/kevoreilly/CAPEv2.git'
repo_url_b = 'https://github.com/Yara-Rules/rules.git'
repo_url_c = 'https://github.com/malice-plugins/yara.git'
repo_url_d = 'https://github.com/mikesxrs/Open-Source-YARA-rules.git'

repo_path_a = '/CAPEv2'
repo_path_b = '/rules'
repo_path_c = '/yara'
repo_path_d = '/Open-Source-YARA-rules'

repo_directory_a = '/home/keepcoding/Desktop/yara_automatico' + repo_path_a
repo_directory_b = '/home/keepcoding/Desktop/yara_automatico' + repo_path_b
repo_directory_c = '/home/keepcoding/Desktop/yara_automatico' + repo_path_c
repo_directory_d = '/home/keepcoding/Desktop/yara_automatico' + repo_path_d

subprocess.run(["git", "pull", repo_url_a], cwd = repo_directory_a)
subprocess.run(["git", "pull", repo_url_b], cwd = repo_directory_b)
subprocess.run(["git", "pull", repo_url_c], cwd = repo_directory_c)
subprocess.run(["git", "pull", repo_url_d], cwd = repo_directory_d)



#Copiar todos los ficheros .yar y .yara a una misma carpeta
#Renombrar todos los fichero con extension .yara a extendion .yar

def copyfiles(src, dst):
    for root, dirs, files in os.walk(folder):
        for filename in files:
            if ('.yara' in filename or '.yar' in filename):
            #content = open(os.path.join(root, filename), 'r').read()
                try:
                    shutil.copy(os.path.join(root, filename), os.path.join(dst, filename))
                except shutil.SameFileError:
                    pass
                
                
                for file in glob.glob(dst):
                    basename, ext = os.path.splitext(filename)
                    
                    if ext == '.yara':
                        ext = ext.replace('.yara', '.yar')
                        new_file = basename + ext

                        old_path = os.path.join(dst, filename)
                        new_path = os.path.join(dst, new_file)
                        os.rename(old_path, new_path)
                        #print(new_file)
            

#Compilar en un archivo todas las reglas contenidas en los ficheros .yar 

def compile(filepaths, dst):
    namespace = dict()
    for folder in filepaths:
        for filename in glob.glob('/home/keepcoding/Desktop/yara_automatico/*.yar'):
            name = os.path.basename(os.path.splitext(filename)[0])
            namespace[name] = filename
     
        rules = yara.compile(filepaths = namespace)
        if os.path.exists(dst):
             os.remove(dst)
        rules.save(dst)   



os.makedirs('all_rules', exist_ok=True)
all_rules_folder = os.path.join(folder + '/all_rules')
copyfiles(src=folder, dst=all_rules_folder)
compile(filepaths=all_rules_folder, dst=namespace)

